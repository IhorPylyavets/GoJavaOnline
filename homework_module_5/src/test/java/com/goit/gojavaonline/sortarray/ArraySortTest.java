package com.goit.gojavaonline.sortarray;

import org.junit.Assert;
import org.junit.Test;

import static org.junit.Assert.*;

public class ArraySortTest {

    @Test
    public void testSortBubble() throws Exception {
        int[] expectedArray = {2, 5, 8, -9, 11, -45, 23, -6, -10, 0, 12, -5, 1, -90, 34, 1, 3, 5, 8, -456, 23, 789, 54,
                -123, -235, -987, 56, 34, -763, 234, 764, -234, 3, 5, 5, 32, 542, 235, 67, 78, 90, -98, 3, 13, -23, -24,
                56, 76, 127, -7, 34, 56, -112, 54, 87, 98, 23, 76, 98, 0, 33, -456, 678, 23, 76, 91, -39, 61, -9, 567,
                -8, 25, 8, 5, 1, 2, 1, -3};

        int[] resultArray = {-987, -763, -456, -456, -235, -234, -123, -112, -98, -90, -45, -39, -24, -23, -10, -9, -9,
                -8, -7, -6, -5, -3, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 8, 8, 8, 11, 12, 13, 23, 23, 23, 23,
                25, 32, 33, 34, 34, 34, 54, 54, 56, 56, 56, 61, 67, 76, 76, 76, 78, 87, 90, 91, 98, 98, 127, 234, 235,
                542, 567, 678, 764, 789};

        ArraySort.sortBubble(expectedArray);

        Assert.assertArrayEquals(expectedArray, resultArray);
    }

    @Test
    public void testSortInsertion() throws Exception {
        int[] expectedArray = {2, 5, 8, -9, 11, -45, 23, -6, -10, 0, 12, -5, 1, -90, 34, 1, 3, 5, 8, -456, 23, 789, 54,
                -123, -235, -987, 56, 34, -763, 234, 764, -234, 3, 5, 5, 32, 542, 235, 67, 78, 90, -98, 3, 13, -23, -24,
                56, 76, 127, -7, 34, 56, -112, 54, 87, 98, 23, 76, 98, 0, 33, -456, 678, 23, 76, 91, -39, 61, -9, 567,
                -8, 25, 8, 5, 1, 2, 1, -3};

        int[] resultArray = {-987, -763, -456, -456, -235, -234, -123, -112, -98, -90, -45, -39, -24, -23, -10, -9, -9,
                -8, -7, -6, -5, -3, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 8, 8, 8, 11, 12, 13, 23, 23, 23, 23,
                25, 32, 33, 34, 34, 34, 54, 54, 56, 56, 56, 61, 67, 76, 76, 76, 78, 87, 90, 91, 98, 98, 127, 234, 235,
                542, 567, 678, 764, 789};

        ArraySort.sortInsertion(expectedArray);

        Assert.assertArrayEquals(expectedArray, resultArray);
    }

    @Test
    public void testSortSelection() throws Exception {
        int[] expectedArray = {2, 5, 8, -9, 11, -45, 23, -6, -10, 0, 12, -5, 1, -90, 34, 1, 3, 5, 8, -456, 23, 789, 54,
                -123, -235, -987, 56, 34, -763, 234, 764, -234, 3, 5, 5, 32, 542, 235, 67, 78, 90, -98, 3, 13, -23, -24,
                56, 76, 127, -7, 34, 56, -112, 54, 87, 98, 23, 76, 98, 0, 33, -456, 678, 23, 76, 91, -39, 61, -9, 567,
                -8, 25, 8, 5, 1, 2, 1, -3};

        int[] resultArray = {-987, -763, -456, -456, -235, -234, -123, -112, -98, -90, -45, -39, -24, -23, -10, -9, -9,
                -8, -7, -6, -5, -3, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 8, 8, 8, 11, 12, 13, 23, 23, 23, 23,
                25, 32, 33, 34, 34, 34, 54, 54, 56, 56, 56, 61, 67, 76, 76, 76, 78, 87, 90, 91, 98, 98, 127, 234, 235,
                542, 567, 678, 764, 789};

        ArraySort.sortSelection(expectedArray);

        Assert.assertArrayEquals(expectedArray, resultArray);
    }

    @Test
    public void testSortMerge() throws Exception {
        int[] expectedArray = {2, 5, 8, -9, 11, -45, 23, -6, -10, 0, 12, -5, 1, -90, 34, 1, 3, 5, 8, -456, 23, 789, 54,
                -123, -235, -987, 56, 34, -763, 234, 764, -234, 3, 5, 5, 32, 542, 235, 67, 78, 90, -98, 3, 13, -23, -24,
                56, 76, 127, -7, 34, 56, -112, 54, 87, 98, 23, 76, 98, 0, 33, -456, 678, 23, 76, 91, -39, 61, -9, 567,
                -8, 25, 8, 5, 1, 2, 1, -3};

        int[] resultArray = {-987, -763, -456, -456, -235, -234, -123, -112, -98, -90, -45, -39, -24, -23, -10, -9, -9,
                -8, -7, -6, -5, -3, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 8, 8, 8, 11, 12, 13, 23, 23, 23, 23,
                25, 32, 33, 34, 34, 34, 54, 54, 56, 56, 56, 61, 67, 76, 76, 76, 78, 87, 90, 91, 98, 98, 127, 234, 235,
                542, 567, 678, 764, 789};

        ArraySort.sortMerge(expectedArray);

        Assert.assertArrayEquals(expectedArray, resultArray);
    }

    @Test
    public void testSortQuick() throws Exception {
        int[] expectedArray = {2, 5, 8, -9, 11, -45, 23, -6, -10, 0, 12, -5, 1, -90, 34, 1, 3, 5, 8, -456, 23, 789, 54,
                -123, -235, -987, 56, 34, -763, 234, 764, -234, 3, 5, 5, 32, 542, 235, 67, 78, 90, -98, 3, 13, -23, -24,
                56, 76, 127, -7, 34, 56, -112, 54, 87, 98, 23, 76, 98, 0, 33, -456, 678, 23, 76, 91, -39, 61, -9, 567,
                -8, 25, 8, 5, 1, 2, 1, -3};

        int[] resultArray = {-987, -763, -456, -456, -235, -234, -123, -112, -98, -90, -45, -39, -24, -23, -10, -9, -9,
                -8, -7, -6, -5, -3, 0, 0, 1, 1, 1, 1, 2, 2, 3, 3, 3, 5, 5, 5, 5, 5, 8, 8, 8, 11, 12, 13, 23, 23, 23, 23,
                25, 32, 33, 34, 34, 34, 54, 54, 56, 56, 56, 61, 67, 76, 76, 76, 78, 87, 90, 91, 98, 98, 127, 234, 235,
                542, 567, 678, 764, 789};

        ArraySort.sortQuick(expectedArray);

        Assert.assertArrayEquals(expectedArray, resultArray);
    }
}